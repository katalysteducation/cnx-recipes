#!/bin/bash

arg1=$1

# Pull in the BOOK_CONFIGS and RECIPE_NAMES
source ./books.txt || exit 1

if [ ! "${arg1}" == "" ]
then
  RECIPE_NAMES=(${arg1})
fi


sassBin="$(npm bin)/node-sass"
outputDir="./recipes/output/"

# Try running sass locally (using rbenv). If that does not work then try it globally
if [[ ! $(${sassBin} --version 2>/dev/null) ]]
then
  >&2 echo "ERROR: Could not find sass executable"
  >&2 echo "INFO: Maybe rerun ./script/setup"
  exit 1
fi


for recipeName in "${RECIPE_NAMES[@]}"
do

  sassFile="./recipes/books/${recipeName}/book.scss"
  inputSassFile="./recipes/books/${recipeName}/${recipeName}.scss"

  >&2 echo "==> Generating ${outputDir}/${recipeName}.css"

  # Node-sass accepts an output DIRECTORY, rather than an output FILE
  # so, in order to support sourcemaps, we have to temporarily
  # rename book.scss to be ap-physics.scss .
  if [[ -f "${inputSassFile}" ]]; then
    rm "${inputSassFile}" || exit 1
  fi
  cp "${sassFile}" "${inputSassFile}" || exit 1
  ${sassBin} --source-map true ${inputSassFile} --output ${outputDir} || exit 1
  rm "${inputSassFile}"
done

./script/build-manifest
